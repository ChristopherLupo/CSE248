package account_mangement;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class User {

	private String firstName;
	private String lastName;
	private String id;
	private boolean male = false;
	private String username;
	private String password;
	private double gpa;

	private static int idCounter = 1;

	public User() {
		super();
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public void setlastName(String lastName) {
		this.lastName = lastName;
	}

	public void setId() {
		id = idCounter + "";

		if (id.length() < 8) {
			int count = id.length();
			String temp = "";
			while (count < 8) {
				temp = temp + "0";
				count++;
			}
			id = temp + id;
			idCounter++;
		}
	}

	public void isMale(String[] boys) {
		for (int i = 0; i < boys.length; i++) {
			if (firstName.equals(boys[i])) {
				male = true;
			}
		}
	}

	public void setUsername() {
		if (lastName.length() <= 4) {
			username = lastName + firstName.substring(0, 1) + id.substring(7);
		} else {
			username = lastName.substring(0, 4);
			username = username + firstName.substring(0, 1);
			username = username + id.substring(7);

		}
	}

	public String getUsername() {
		return username;
	}

	public void setPassword() {
		String capitolLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		String lowerLetters = "abcdefghijklmnopqrstuvwxyz";
		String numbers = "0123456789";
		String foward = "\\";
		String symbols = foward + "\"!#$%&'()*+,-./:;<=>@[]^_`{|}~\"";

		char[] word = new char[8];
		word[0] = capitolLetters.charAt((int) (Math.random() * 26));
		word[1] = lowerLetters.charAt((int) (Math.random() * 26));
		word[2] = numbers.charAt((int) (Math.random() * 10));
		word[3] = symbols.charAt((int) (Math.random() * 31));
		word[4] = capitolLetters.charAt((int) (Math.random() * 26));
		word[5] = lowerLetters.charAt((int) (Math.random() * 26));
		word[6] = numbers.charAt((int) (Math.random() * 10));
		word[7] = symbols.charAt((int) (Math.random() * 31));

		for (int i = 0; i < word.length; i++) {
			int rnd = (int) (Math.random() * 8);

			char letter = word[rnd];
			word[rnd] = word[i];
			word[i] = letter;
		}

		password = new String(word);
	}

	public String getPassword() {
		return password;
	}

	public void setGPA() {
		gpa = ((double) ((int) (Math.random() * 41)) / 10);
	}

	@Override
	public String toString() {
		return firstName + " " + lastName + ", id: " + id + ", username: " + username + ", is male: " + male
				+ ", password : " + password + ", GPA : " + gpa;
	}

	public Boolean makeAccount(String first, String last, String gender, String gpa, String password) {
		Boolean test = true;

		if (first.equals("")) {
			test = false;
		}

		firstName = first;
		if (last.equals("")) {
			test = false;
		}

		lastName = last;
		if (gender.toUpperCase().equals("M")) {
			male = true;
		} else if (gender.toUpperCase().equals("F")) {
			male = false;
		} else {
			test = false;
		}

		this.password = password;

		if (password.length() != 8) {
			test = false;
		}

		Pattern pattern = Pattern.compile("[A-Z]");
		Matcher matcher = pattern.matcher(password);

		if (matcher.find() == false) {
			test = false;
		}

		pattern = Pattern.compile("[a-z]");
		matcher = pattern.matcher(password);

		if (matcher.find() == false) {
			test = false;
		}

		pattern = Pattern.compile("[0-9]");
		matcher = pattern.matcher(password);

		if (matcher.find() == false) {
			test = false;
		}

		pattern = Pattern.compile("[!-/Z-a:->{-~]");
		matcher = pattern.matcher(password);

		if (matcher.find() == false) {
			test = false;
		}

		try {
			if (Double.parseDouble(gpa) >= 0.0 && Double.parseDouble(gpa) <= 4.0) {
				this.gpa = Double.parseDouble(gpa);
			} else {
				test = false;
			}
		} catch (Exception e) {
			test = false;
		}

		if (test == true) {
			setId();
			setUsername();
		}
		return test;
	}
}
